//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsultorioLibrary.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Consultorio_DBEntities : DbContext
    {
        public Consultorio_DBEntities()
            : base("name=Consultorio_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cita> Cita { get; set; }
        public virtual DbSet<CondicionFisica> CondicionFisica { get; set; }
        public virtual DbSet<Consulta> Consulta { get; set; }
        public virtual DbSet<Diagnostico> Diagnostico { get; set; }
        public virtual DbSet<Doctor> Doctor { get; set; }
        public virtual DbSet<Domicilio> Domicilio { get; set; }
        public virtual DbSet<Especialidad> Especialidad { get; set; }
        public virtual DbSet<Estado_Civil> Estado_Civil { get; set; }
        public virtual DbSet<ExamenFisico> ExamenFisico { get; set; }
        public virtual DbSet<Genero> Genero { get; set; }
        public virtual DbSet<Municipio> Municipio { get; set; }
        public virtual DbSet<Paciente> Paciente { get; set; }
        public virtual DbSet<Provincia> Provincia { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tipo_Paciente> Tipo_Paciente { get; set; }
        public virtual DbSet<Tipo_Usuario> Tipo_Usuario { get; set; }
        public virtual DbSet<Tratamiento> Tratamiento { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Zona> Zona { get; set; }
    
        public virtual ObjectResult<Busqueda_ConsultaCompleta_Result> Busqueda_ConsultaCompleta(string control, Nullable<int> sub_Control, string busqueda, Nullable<int> con_ID, Nullable<System.DateTime> con_Fecha, Nullable<System.DateTime> con_FechaDesde, Nullable<System.DateTime> con_FechaHasta, Nullable<System.TimeSpan> con_Hora, string con_Motivo, string con_Historial, Nullable<bool> con_Seguimiento, Nullable<int> pa_ID, Nullable<int> doc_ID, Nullable<int> dia_ID, string dia_Descripcion, Nullable<int> exa_ID, string exa_Descripcion, Nullable<int> trat_ID, string trat_Descripcion, Nullable<int> condF_ID, Nullable<int> condF_Peso, Nullable<int> cond_Talla, Nullable<int> condF_IndiceMC, Nullable<int> condF_Temp, Nullable<int> condF_Sistolica, Nullable<int> condF_Diastolica)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("Busqueda", busqueda) :
                new ObjectParameter("Busqueda", typeof(string));
    
            var con_IDParameter = con_ID.HasValue ?
                new ObjectParameter("Con_ID", con_ID) :
                new ObjectParameter("Con_ID", typeof(int));
    
            var con_FechaParameter = con_Fecha.HasValue ?
                new ObjectParameter("Con_Fecha", con_Fecha) :
                new ObjectParameter("Con_Fecha", typeof(System.DateTime));
    
            var con_FechaDesdeParameter = con_FechaDesde.HasValue ?
                new ObjectParameter("Con_FechaDesde", con_FechaDesde) :
                new ObjectParameter("Con_FechaDesde", typeof(System.DateTime));
    
            var con_FechaHastaParameter = con_FechaHasta.HasValue ?
                new ObjectParameter("Con_FechaHasta", con_FechaHasta) :
                new ObjectParameter("Con_FechaHasta", typeof(System.DateTime));
    
            var con_HoraParameter = con_Hora.HasValue ?
                new ObjectParameter("Con_Hora", con_Hora) :
                new ObjectParameter("Con_Hora", typeof(System.TimeSpan));
    
            var con_MotivoParameter = con_Motivo != null ?
                new ObjectParameter("Con_Motivo", con_Motivo) :
                new ObjectParameter("Con_Motivo", typeof(string));
    
            var con_HistorialParameter = con_Historial != null ?
                new ObjectParameter("Con_Historial", con_Historial) :
                new ObjectParameter("Con_Historial", typeof(string));
    
            var con_SeguimientoParameter = con_Seguimiento.HasValue ?
                new ObjectParameter("Con_Seguimiento", con_Seguimiento) :
                new ObjectParameter("Con_Seguimiento", typeof(bool));
    
            var pa_IDParameter = pa_ID.HasValue ?
                new ObjectParameter("Pa_ID", pa_ID) :
                new ObjectParameter("Pa_ID", typeof(int));
    
            var doc_IDParameter = doc_ID.HasValue ?
                new ObjectParameter("Doc_ID", doc_ID) :
                new ObjectParameter("Doc_ID", typeof(int));
    
            var dia_IDParameter = dia_ID.HasValue ?
                new ObjectParameter("Dia_ID", dia_ID) :
                new ObjectParameter("Dia_ID", typeof(int));
    
            var dia_DescripcionParameter = dia_Descripcion != null ?
                new ObjectParameter("Dia_Descripcion", dia_Descripcion) :
                new ObjectParameter("Dia_Descripcion", typeof(string));
    
            var exa_IDParameter = exa_ID.HasValue ?
                new ObjectParameter("Exa_ID", exa_ID) :
                new ObjectParameter("Exa_ID", typeof(int));
    
            var exa_DescripcionParameter = exa_Descripcion != null ?
                new ObjectParameter("Exa_Descripcion", exa_Descripcion) :
                new ObjectParameter("Exa_Descripcion", typeof(string));
    
            var trat_IDParameter = trat_ID.HasValue ?
                new ObjectParameter("Trat_ID", trat_ID) :
                new ObjectParameter("Trat_ID", typeof(int));
    
            var trat_DescripcionParameter = trat_Descripcion != null ?
                new ObjectParameter("Trat_Descripcion", trat_Descripcion) :
                new ObjectParameter("Trat_Descripcion", typeof(string));
    
            var condF_IDParameter = condF_ID.HasValue ?
                new ObjectParameter("CondF_ID", condF_ID) :
                new ObjectParameter("CondF_ID", typeof(int));
    
            var condF_PesoParameter = condF_Peso.HasValue ?
                new ObjectParameter("CondF_Peso", condF_Peso) :
                new ObjectParameter("CondF_Peso", typeof(int));
    
            var cond_TallaParameter = cond_Talla.HasValue ?
                new ObjectParameter("Cond_Talla", cond_Talla) :
                new ObjectParameter("Cond_Talla", typeof(int));
    
            var condF_IndiceMCParameter = condF_IndiceMC.HasValue ?
                new ObjectParameter("CondF_IndiceMC", condF_IndiceMC) :
                new ObjectParameter("CondF_IndiceMC", typeof(int));
    
            var condF_TempParameter = condF_Temp.HasValue ?
                new ObjectParameter("CondF_Temp", condF_Temp) :
                new ObjectParameter("CondF_Temp", typeof(int));
    
            var condF_SistolicaParameter = condF_Sistolica.HasValue ?
                new ObjectParameter("CondF_Sistolica", condF_Sistolica) :
                new ObjectParameter("CondF_Sistolica", typeof(int));
    
            var condF_DiastolicaParameter = condF_Diastolica.HasValue ?
                new ObjectParameter("CondF_Diastolica", condF_Diastolica) :
                new ObjectParameter("CondF_Diastolica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Busqueda_ConsultaCompleta_Result>("Busqueda_ConsultaCompleta", controlParameter, sub_ControlParameter, busquedaParameter, con_IDParameter, con_FechaParameter, con_FechaDesdeParameter, con_FechaHastaParameter, con_HoraParameter, con_MotivoParameter, con_HistorialParameter, con_SeguimientoParameter, pa_IDParameter, doc_IDParameter, dia_IDParameter, dia_DescripcionParameter, exa_IDParameter, exa_DescripcionParameter, trat_IDParameter, trat_DescripcionParameter, condF_IDParameter, condF_PesoParameter, cond_TallaParameter, condF_IndiceMCParameter, condF_TempParameter, condF_SistolicaParameter, condF_DiastolicaParameter);
        }
    
        public virtual ObjectResult<Busqueda_Paciente_Result> Busqueda_Paciente(string control, Nullable<int> sub_Control, Nullable<int> pa_ID, string pa_Nombre, string pa_Apellido, string pa_Cedula, Nullable<System.DateTime> pa_FechaNac, Nullable<System.DateTime> pa_FechaConsultaDesde, Nullable<System.DateTime> pa_FechaConsultaHasta, Nullable<System.DateTime> pa_FechaNacltaDesde, Nullable<System.DateTime> pa_FechaNacltaHasta, string busqueda, Nullable<int> domi_ID, Nullable<bool> pa_EstaActivo, Nullable<bool> pa_EstaEliminado, Nullable<int> est_ID, Nullable<int> gen_ID, Nullable<int> zo_ID, Nullable<int> tP_ID)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var pa_IDParameter = pa_ID.HasValue ?
                new ObjectParameter("Pa_ID", pa_ID) :
                new ObjectParameter("Pa_ID", typeof(int));
    
            var pa_NombreParameter = pa_Nombre != null ?
                new ObjectParameter("Pa_Nombre", pa_Nombre) :
                new ObjectParameter("Pa_Nombre", typeof(string));
    
            var pa_ApellidoParameter = pa_Apellido != null ?
                new ObjectParameter("Pa_Apellido", pa_Apellido) :
                new ObjectParameter("Pa_Apellido", typeof(string));
    
            var pa_CedulaParameter = pa_Cedula != null ?
                new ObjectParameter("Pa_Cedula", pa_Cedula) :
                new ObjectParameter("Pa_Cedula", typeof(string));
    
            var pa_FechaNacParameter = pa_FechaNac.HasValue ?
                new ObjectParameter("Pa_FechaNac", pa_FechaNac) :
                new ObjectParameter("Pa_FechaNac", typeof(System.DateTime));
    
            var pa_FechaConsultaDesdeParameter = pa_FechaConsultaDesde.HasValue ?
                new ObjectParameter("Pa_FechaConsultaDesde", pa_FechaConsultaDesde) :
                new ObjectParameter("Pa_FechaConsultaDesde", typeof(System.DateTime));
    
            var pa_FechaConsultaHastaParameter = pa_FechaConsultaHasta.HasValue ?
                new ObjectParameter("Pa_FechaConsultaHasta", pa_FechaConsultaHasta) :
                new ObjectParameter("Pa_FechaConsultaHasta", typeof(System.DateTime));
    
            var pa_FechaNacltaDesdeParameter = pa_FechaNacltaDesde.HasValue ?
                new ObjectParameter("Pa_FechaNacltaDesde", pa_FechaNacltaDesde) :
                new ObjectParameter("Pa_FechaNacltaDesde", typeof(System.DateTime));
    
            var pa_FechaNacltaHastaParameter = pa_FechaNacltaHasta.HasValue ?
                new ObjectParameter("Pa_FechaNacltaHasta", pa_FechaNacltaHasta) :
                new ObjectParameter("Pa_FechaNacltaHasta", typeof(System.DateTime));
    
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("Busqueda", busqueda) :
                new ObjectParameter("Busqueda", typeof(string));
    
            var domi_IDParameter = domi_ID.HasValue ?
                new ObjectParameter("Domi_ID", domi_ID) :
                new ObjectParameter("Domi_ID", typeof(int));
    
            var pa_EstaActivoParameter = pa_EstaActivo.HasValue ?
                new ObjectParameter("Pa_EstaActivo", pa_EstaActivo) :
                new ObjectParameter("Pa_EstaActivo", typeof(bool));
    
            var pa_EstaEliminadoParameter = pa_EstaEliminado.HasValue ?
                new ObjectParameter("Pa_EstaEliminado", pa_EstaEliminado) :
                new ObjectParameter("Pa_EstaEliminado", typeof(bool));
    
            var est_IDParameter = est_ID.HasValue ?
                new ObjectParameter("Est_ID", est_ID) :
                new ObjectParameter("Est_ID", typeof(int));
    
            var gen_IDParameter = gen_ID.HasValue ?
                new ObjectParameter("Gen_ID", gen_ID) :
                new ObjectParameter("Gen_ID", typeof(int));
    
            var zo_IDParameter = zo_ID.HasValue ?
                new ObjectParameter("Zo_ID", zo_ID) :
                new ObjectParameter("Zo_ID", typeof(int));
    
            var tP_IDParameter = tP_ID.HasValue ?
                new ObjectParameter("TP_ID", tP_ID) :
                new ObjectParameter("TP_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Busqueda_Paciente_Result>("Busqueda_Paciente", controlParameter, sub_ControlParameter, pa_IDParameter, pa_NombreParameter, pa_ApellidoParameter, pa_CedulaParameter, pa_FechaNacParameter, pa_FechaConsultaDesdeParameter, pa_FechaConsultaHastaParameter, pa_FechaNacltaDesdeParameter, pa_FechaNacltaHastaParameter, busquedaParameter, domi_IDParameter, pa_EstaActivoParameter, pa_EstaEliminadoParameter, est_IDParameter, gen_IDParameter, zo_IDParameter, tP_IDParameter);
        }
    
        public virtual ObjectResult<ResumenConsulta_Result> ResumenConsulta(Nullable<int> con_ID)
        {
            var con_IDParameter = con_ID.HasValue ?
                new ObjectParameter("Con_ID", con_ID) :
                new ObjectParameter("Con_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ResumenConsulta_Result>("ResumenConsulta", con_IDParameter);
        }
    
        public virtual ObjectResult<SIUD_Cita_Result> SIUD_Cita(string control, Nullable<int> sub_Control, string busqueda, Nullable<int> ci_ID, string ci_Motivo, Nullable<System.DateTime> ci_Fecha, Nullable<System.TimeSpan> ci_Hora, string ci_Nota, Nullable<int> pa_ID, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("Busqueda", busqueda) :
                new ObjectParameter("Busqueda", typeof(string));
    
            var ci_IDParameter = ci_ID.HasValue ?
                new ObjectParameter("Ci_ID", ci_ID) :
                new ObjectParameter("Ci_ID", typeof(int));
    
            var ci_MotivoParameter = ci_Motivo != null ?
                new ObjectParameter("Ci_Motivo", ci_Motivo) :
                new ObjectParameter("Ci_Motivo", typeof(string));
    
            var ci_FechaParameter = ci_Fecha.HasValue ?
                new ObjectParameter("Ci_Fecha", ci_Fecha) :
                new ObjectParameter("Ci_Fecha", typeof(System.DateTime));
    
            var ci_HoraParameter = ci_Hora.HasValue ?
                new ObjectParameter("Ci_Hora", ci_Hora) :
                new ObjectParameter("Ci_Hora", typeof(System.TimeSpan));
    
            var ci_NotaParameter = ci_Nota != null ?
                new ObjectParameter("Ci_Nota", ci_Nota) :
                new ObjectParameter("Ci_Nota", typeof(string));
    
            var pa_IDParameter = pa_ID.HasValue ?
                new ObjectParameter("Pa_ID", pa_ID) :
                new ObjectParameter("Pa_ID", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_Cita_Result>("SIUD_Cita", controlParameter, sub_ControlParameter, busquedaParameter, ci_IDParameter, ci_MotivoParameter, ci_FechaParameter, ci_HoraParameter, ci_NotaParameter, pa_IDParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<SIUD_CondicionFisica_Result> SIUD_CondicionFisica(string control, Nullable<int> sub_Control, Nullable<int> condF_ID, Nullable<double> condF_Peso, Nullable<double> cond_Talla, Nullable<double> condF_IndiceMC, Nullable<double> condF_Temp, Nullable<int> condF_Sistolica, Nullable<int> condF_Diastolica, Nullable<int> exa_ID)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var condF_IDParameter = condF_ID.HasValue ?
                new ObjectParameter("CondF_ID", condF_ID) :
                new ObjectParameter("CondF_ID", typeof(int));
    
            var condF_PesoParameter = condF_Peso.HasValue ?
                new ObjectParameter("CondF_Peso", condF_Peso) :
                new ObjectParameter("CondF_Peso", typeof(double));
    
            var cond_TallaParameter = cond_Talla.HasValue ?
                new ObjectParameter("Cond_Talla", cond_Talla) :
                new ObjectParameter("Cond_Talla", typeof(double));
    
            var condF_IndiceMCParameter = condF_IndiceMC.HasValue ?
                new ObjectParameter("CondF_IndiceMC", condF_IndiceMC) :
                new ObjectParameter("CondF_IndiceMC", typeof(double));
    
            var condF_TempParameter = condF_Temp.HasValue ?
                new ObjectParameter("CondF_Temp", condF_Temp) :
                new ObjectParameter("CondF_Temp", typeof(double));
    
            var condF_SistolicaParameter = condF_Sistolica.HasValue ?
                new ObjectParameter("CondF_Sistolica", condF_Sistolica) :
                new ObjectParameter("CondF_Sistolica", typeof(int));
    
            var condF_DiastolicaParameter = condF_Diastolica.HasValue ?
                new ObjectParameter("CondF_Diastolica", condF_Diastolica) :
                new ObjectParameter("CondF_Diastolica", typeof(int));
    
            var exa_IDParameter = exa_ID.HasValue ?
                new ObjectParameter("Exa_ID", exa_ID) :
                new ObjectParameter("Exa_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_CondicionFisica_Result>("SIUD_CondicionFisica", controlParameter, sub_ControlParameter, condF_IDParameter, condF_PesoParameter, cond_TallaParameter, condF_IndiceMCParameter, condF_TempParameter, condF_SistolicaParameter, condF_DiastolicaParameter, exa_IDParameter);
        }
    
        public virtual ObjectResult<SIUD_Consulta_Result> SIUD_Consulta(string control, Nullable<int> sub_Control, Nullable<int> con_ID, Nullable<System.DateTime> con_Fecha, Nullable<System.TimeSpan> con_Hora, string con_Motivo, string con_Historial, Nullable<bool> con_Seguimiento, Nullable<int> pa_ID, Nullable<int> doc_ID)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var con_IDParameter = con_ID.HasValue ?
                new ObjectParameter("Con_ID", con_ID) :
                new ObjectParameter("Con_ID", typeof(int));
    
            var con_FechaParameter = con_Fecha.HasValue ?
                new ObjectParameter("Con_Fecha", con_Fecha) :
                new ObjectParameter("Con_Fecha", typeof(System.DateTime));
    
            var con_HoraParameter = con_Hora.HasValue ?
                new ObjectParameter("Con_Hora", con_Hora) :
                new ObjectParameter("Con_Hora", typeof(System.TimeSpan));
    
            var con_MotivoParameter = con_Motivo != null ?
                new ObjectParameter("Con_Motivo", con_Motivo) :
                new ObjectParameter("Con_Motivo", typeof(string));
    
            var con_HistorialParameter = con_Historial != null ?
                new ObjectParameter("Con_Historial", con_Historial) :
                new ObjectParameter("Con_Historial", typeof(string));
    
            var con_SeguimientoParameter = con_Seguimiento.HasValue ?
                new ObjectParameter("Con_Seguimiento", con_Seguimiento) :
                new ObjectParameter("Con_Seguimiento", typeof(bool));
    
            var pa_IDParameter = pa_ID.HasValue ?
                new ObjectParameter("Pa_ID", pa_ID) :
                new ObjectParameter("Pa_ID", typeof(int));
    
            var doc_IDParameter = doc_ID.HasValue ?
                new ObjectParameter("Doc_ID", doc_ID) :
                new ObjectParameter("Doc_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_Consulta_Result>("SIUD_Consulta", controlParameter, sub_ControlParameter, con_IDParameter, con_FechaParameter, con_HoraParameter, con_MotivoParameter, con_HistorialParameter, con_SeguimientoParameter, pa_IDParameter, doc_IDParameter);
        }
    
        public virtual ObjectResult<SIUD_ConsultaCompleta_Result> SIUD_ConsultaCompleta(string control, Nullable<int> sub_Control, Nullable<int> con_ID, Nullable<System.DateTime> con_Fecha, Nullable<System.TimeSpan> con_Hora, string con_Motivo, string con_Historial, Nullable<bool> con_Seguimiento, Nullable<int> pa_ID, Nullable<int> doc_ID, Nullable<int> dia_ID, string dia_Descripcion, Nullable<int> exa_ID, string exa_Descripcion, Nullable<int> trat_ID, string trat_Descripcion, Nullable<int> condF_ID, Nullable<int> condF_Peso, Nullable<int> cond_Talla, Nullable<int> condF_IndiceMC, Nullable<int> condF_Temp, Nullable<int> condF_Sistolica, Nullable<int> condF_Diastolica)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var con_IDParameter = con_ID.HasValue ?
                new ObjectParameter("Con_ID", con_ID) :
                new ObjectParameter("Con_ID", typeof(int));
    
            var con_FechaParameter = con_Fecha.HasValue ?
                new ObjectParameter("Con_Fecha", con_Fecha) :
                new ObjectParameter("Con_Fecha", typeof(System.DateTime));
    
            var con_HoraParameter = con_Hora.HasValue ?
                new ObjectParameter("Con_Hora", con_Hora) :
                new ObjectParameter("Con_Hora", typeof(System.TimeSpan));
    
            var con_MotivoParameter = con_Motivo != null ?
                new ObjectParameter("Con_Motivo", con_Motivo) :
                new ObjectParameter("Con_Motivo", typeof(string));
    
            var con_HistorialParameter = con_Historial != null ?
                new ObjectParameter("Con_Historial", con_Historial) :
                new ObjectParameter("Con_Historial", typeof(string));
    
            var con_SeguimientoParameter = con_Seguimiento.HasValue ?
                new ObjectParameter("Con_Seguimiento", con_Seguimiento) :
                new ObjectParameter("Con_Seguimiento", typeof(bool));
    
            var pa_IDParameter = pa_ID.HasValue ?
                new ObjectParameter("Pa_ID", pa_ID) :
                new ObjectParameter("Pa_ID", typeof(int));
    
            var doc_IDParameter = doc_ID.HasValue ?
                new ObjectParameter("Doc_ID", doc_ID) :
                new ObjectParameter("Doc_ID", typeof(int));
    
            var dia_IDParameter = dia_ID.HasValue ?
                new ObjectParameter("Dia_ID", dia_ID) :
                new ObjectParameter("Dia_ID", typeof(int));
    
            var dia_DescripcionParameter = dia_Descripcion != null ?
                new ObjectParameter("Dia_Descripcion", dia_Descripcion) :
                new ObjectParameter("Dia_Descripcion", typeof(string));
    
            var exa_IDParameter = exa_ID.HasValue ?
                new ObjectParameter("Exa_ID", exa_ID) :
                new ObjectParameter("Exa_ID", typeof(int));
    
            var exa_DescripcionParameter = exa_Descripcion != null ?
                new ObjectParameter("Exa_Descripcion", exa_Descripcion) :
                new ObjectParameter("Exa_Descripcion", typeof(string));
    
            var trat_IDParameter = trat_ID.HasValue ?
                new ObjectParameter("Trat_ID", trat_ID) :
                new ObjectParameter("Trat_ID", typeof(int));
    
            var trat_DescripcionParameter = trat_Descripcion != null ?
                new ObjectParameter("Trat_Descripcion", trat_Descripcion) :
                new ObjectParameter("Trat_Descripcion", typeof(string));
    
            var condF_IDParameter = condF_ID.HasValue ?
                new ObjectParameter("CondF_ID", condF_ID) :
                new ObjectParameter("CondF_ID", typeof(int));
    
            var condF_PesoParameter = condF_Peso.HasValue ?
                new ObjectParameter("CondF_Peso", condF_Peso) :
                new ObjectParameter("CondF_Peso", typeof(int));
    
            var cond_TallaParameter = cond_Talla.HasValue ?
                new ObjectParameter("Cond_Talla", cond_Talla) :
                new ObjectParameter("Cond_Talla", typeof(int));
    
            var condF_IndiceMCParameter = condF_IndiceMC.HasValue ?
                new ObjectParameter("CondF_IndiceMC", condF_IndiceMC) :
                new ObjectParameter("CondF_IndiceMC", typeof(int));
    
            var condF_TempParameter = condF_Temp.HasValue ?
                new ObjectParameter("CondF_Temp", condF_Temp) :
                new ObjectParameter("CondF_Temp", typeof(int));
    
            var condF_SistolicaParameter = condF_Sistolica.HasValue ?
                new ObjectParameter("CondF_Sistolica", condF_Sistolica) :
                new ObjectParameter("CondF_Sistolica", typeof(int));
    
            var condF_DiastolicaParameter = condF_Diastolica.HasValue ?
                new ObjectParameter("CondF_Diastolica", condF_Diastolica) :
                new ObjectParameter("CondF_Diastolica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_ConsultaCompleta_Result>("SIUD_ConsultaCompleta", controlParameter, sub_ControlParameter, con_IDParameter, con_FechaParameter, con_HoraParameter, con_MotivoParameter, con_HistorialParameter, con_SeguimientoParameter, pa_IDParameter, doc_IDParameter, dia_IDParameter, dia_DescripcionParameter, exa_IDParameter, exa_DescripcionParameter, trat_IDParameter, trat_DescripcionParameter, condF_IDParameter, condF_PesoParameter, cond_TallaParameter, condF_IndiceMCParameter, condF_TempParameter, condF_SistolicaParameter, condF_DiastolicaParameter);
        }
    
        public virtual ObjectResult<SIUD_DetalleConsulta_Result> SIUD_DetalleConsulta(string control, Nullable<int> sub_Control, Nullable<int> dia_ID, string dia_Descripcion, Nullable<int> exa_ID, string exa_Descripcion, Nullable<int> trat_ID, string trat_Descripcion, Nullable<int> con_ID)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var dia_IDParameter = dia_ID.HasValue ?
                new ObjectParameter("Dia_ID", dia_ID) :
                new ObjectParameter("Dia_ID", typeof(int));
    
            var dia_DescripcionParameter = dia_Descripcion != null ?
                new ObjectParameter("Dia_Descripcion", dia_Descripcion) :
                new ObjectParameter("Dia_Descripcion", typeof(string));
    
            var exa_IDParameter = exa_ID.HasValue ?
                new ObjectParameter("Exa_ID", exa_ID) :
                new ObjectParameter("Exa_ID", typeof(int));
    
            var exa_DescripcionParameter = exa_Descripcion != null ?
                new ObjectParameter("Exa_Descripcion", exa_Descripcion) :
                new ObjectParameter("Exa_Descripcion", typeof(string));
    
            var trat_IDParameter = trat_ID.HasValue ?
                new ObjectParameter("Trat_ID", trat_ID) :
                new ObjectParameter("Trat_ID", typeof(int));
    
            var trat_DescripcionParameter = trat_Descripcion != null ?
                new ObjectParameter("Trat_Descripcion", trat_Descripcion) :
                new ObjectParameter("Trat_Descripcion", typeof(string));
    
            var con_IDParameter = con_ID.HasValue ?
                new ObjectParameter("Con_ID", con_ID) :
                new ObjectParameter("Con_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_DetalleConsulta_Result>("SIUD_DetalleConsulta", controlParameter, sub_ControlParameter, dia_IDParameter, dia_DescripcionParameter, exa_IDParameter, exa_DescripcionParameter, trat_IDParameter, trat_DescripcionParameter, con_IDParameter);
        }
    
        public virtual ObjectResult<SIUD_Domicilio_Result> SIUD_Domicilio(string control, Nullable<int> sub_Control, Nullable<int> domi_ID, string domi_Sector, string domi_Calle, string domi_Numero, Nullable<int> mu_ID, Nullable<int> pa_ID)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var domi_IDParameter = domi_ID.HasValue ?
                new ObjectParameter("Domi_ID", domi_ID) :
                new ObjectParameter("Domi_ID", typeof(int));
    
            var domi_SectorParameter = domi_Sector != null ?
                new ObjectParameter("Domi_Sector", domi_Sector) :
                new ObjectParameter("Domi_Sector", typeof(string));
    
            var domi_CalleParameter = domi_Calle != null ?
                new ObjectParameter("Domi_Calle", domi_Calle) :
                new ObjectParameter("Domi_Calle", typeof(string));
    
            var domi_NumeroParameter = domi_Numero != null ?
                new ObjectParameter("Domi_Numero", domi_Numero) :
                new ObjectParameter("Domi_Numero", typeof(string));
    
            var mu_IDParameter = mu_ID.HasValue ?
                new ObjectParameter("Mu_ID", mu_ID) :
                new ObjectParameter("Mu_ID", typeof(int));
    
            var pa_IDParameter = pa_ID.HasValue ?
                new ObjectParameter("Pa_ID", pa_ID) :
                new ObjectParameter("Pa_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_Domicilio_Result>("SIUD_Domicilio", controlParameter, sub_ControlParameter, domi_IDParameter, domi_SectorParameter, domi_CalleParameter, domi_NumeroParameter, mu_IDParameter, pa_IDParameter);
        }
    
        public virtual ObjectResult<SIUD_EstadoCivil_Result> SIUD_EstadoCivil(string control, Nullable<int> sub_Control, Nullable<int> gen_ID, string est_Descripcion)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var gen_IDParameter = gen_ID.HasValue ?
                new ObjectParameter("Gen_ID", gen_ID) :
                new ObjectParameter("Gen_ID", typeof(int));
    
            var est_DescripcionParameter = est_Descripcion != null ?
                new ObjectParameter("Est_Descripcion", est_Descripcion) :
                new ObjectParameter("Est_Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_EstadoCivil_Result>("SIUD_EstadoCivil", controlParameter, sub_ControlParameter, gen_IDParameter, est_DescripcionParameter);
        }
    
        public virtual ObjectResult<SIUD_ExamenFisico_Result> SIUD_ExamenFisico(string control, Nullable<int> sub_Control, Nullable<int> exa_ID, string exa_Descripcion, Nullable<int> con_ID)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var exa_IDParameter = exa_ID.HasValue ?
                new ObjectParameter("Exa_ID", exa_ID) :
                new ObjectParameter("Exa_ID", typeof(int));
    
            var exa_DescripcionParameter = exa_Descripcion != null ?
                new ObjectParameter("Exa_Descripcion", exa_Descripcion) :
                new ObjectParameter("Exa_Descripcion", typeof(string));
    
            var con_IDParameter = con_ID.HasValue ?
                new ObjectParameter("Con_ID", con_ID) :
                new ObjectParameter("Con_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_ExamenFisico_Result>("SIUD_ExamenFisico", controlParameter, sub_ControlParameter, exa_IDParameter, exa_DescripcionParameter, con_IDParameter);
        }
    
        public virtual ObjectResult<SIUD_GENERO_Result> SIUD_GENERO(string control, Nullable<int> sub_Control, Nullable<int> gen_ID, string descripcion_Genero)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var gen_IDParameter = gen_ID.HasValue ?
                new ObjectParameter("Gen_ID", gen_ID) :
                new ObjectParameter("Gen_ID", typeof(int));
    
            var descripcion_GeneroParameter = descripcion_Genero != null ?
                new ObjectParameter("Descripcion_Genero", descripcion_Genero) :
                new ObjectParameter("Descripcion_Genero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_GENERO_Result>("SIUD_GENERO", controlParameter, sub_ControlParameter, gen_IDParameter, descripcion_GeneroParameter);
        }
    
        public virtual ObjectResult<SIUD_Municipio_Result> SIUD_Municipio(string control, Nullable<int> sub_Control, Nullable<int> mu_ID, string mu_Nombre, Nullable<bool> mu_EstaActivo, Nullable<int> pro_ID)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var mu_IDParameter = mu_ID.HasValue ?
                new ObjectParameter("Mu_ID", mu_ID) :
                new ObjectParameter("Mu_ID", typeof(int));
    
            var mu_NombreParameter = mu_Nombre != null ?
                new ObjectParameter("Mu_Nombre", mu_Nombre) :
                new ObjectParameter("Mu_Nombre", typeof(string));
    
            var mu_EstaActivoParameter = mu_EstaActivo.HasValue ?
                new ObjectParameter("Mu_EstaActivo", mu_EstaActivo) :
                new ObjectParameter("Mu_EstaActivo", typeof(bool));
    
            var pro_IDParameter = pro_ID.HasValue ?
                new ObjectParameter("Pro_ID", pro_ID) :
                new ObjectParameter("Pro_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_Municipio_Result>("SIUD_Municipio", controlParameter, sub_ControlParameter, mu_IDParameter, mu_NombreParameter, mu_EstaActivoParameter, pro_IDParameter);
        }
    
        public virtual ObjectResult<SIUD_Paciente_Result> SIUD_Paciente(string control, Nullable<int> sub_Control, Nullable<int> pa_ID, string pa_Nombre, string pa_Apellido, string pa_Cedula, Nullable<System.DateTime> pa_FechaNac, Nullable<System.DateTime> pa_FechaAlta, string pa_Telefono, string pa_Celular, string pa_Email, Nullable<int> domi_ID, Nullable<bool> pa_EstaActivo, Nullable<bool> pa_EstaEliminado, Nullable<int> zo_ID, Nullable<int> tP_ID, Nullable<int> est_ID, Nullable<int> gen_ID)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var pa_IDParameter = pa_ID.HasValue ?
                new ObjectParameter("Pa_ID", pa_ID) :
                new ObjectParameter("Pa_ID", typeof(int));
    
            var pa_NombreParameter = pa_Nombre != null ?
                new ObjectParameter("Pa_Nombre", pa_Nombre) :
                new ObjectParameter("Pa_Nombre", typeof(string));
    
            var pa_ApellidoParameter = pa_Apellido != null ?
                new ObjectParameter("Pa_Apellido", pa_Apellido) :
                new ObjectParameter("Pa_Apellido", typeof(string));
    
            var pa_CedulaParameter = pa_Cedula != null ?
                new ObjectParameter("Pa_Cedula", pa_Cedula) :
                new ObjectParameter("Pa_Cedula", typeof(string));
    
            var pa_FechaNacParameter = pa_FechaNac.HasValue ?
                new ObjectParameter("Pa_FechaNac", pa_FechaNac) :
                new ObjectParameter("Pa_FechaNac", typeof(System.DateTime));
    
            var pa_FechaAltaParameter = pa_FechaAlta.HasValue ?
                new ObjectParameter("Pa_FechaAlta", pa_FechaAlta) :
                new ObjectParameter("Pa_FechaAlta", typeof(System.DateTime));
    
            var pa_TelefonoParameter = pa_Telefono != null ?
                new ObjectParameter("Pa_Telefono", pa_Telefono) :
                new ObjectParameter("Pa_Telefono", typeof(string));
    
            var pa_CelularParameter = pa_Celular != null ?
                new ObjectParameter("Pa_Celular", pa_Celular) :
                new ObjectParameter("Pa_Celular", typeof(string));
    
            var pa_EmailParameter = pa_Email != null ?
                new ObjectParameter("Pa_Email", pa_Email) :
                new ObjectParameter("Pa_Email", typeof(string));
    
            var domi_IDParameter = domi_ID.HasValue ?
                new ObjectParameter("Domi_ID", domi_ID) :
                new ObjectParameter("Domi_ID", typeof(int));
    
            var pa_EstaActivoParameter = pa_EstaActivo.HasValue ?
                new ObjectParameter("Pa_EstaActivo", pa_EstaActivo) :
                new ObjectParameter("Pa_EstaActivo", typeof(bool));
    
            var pa_EstaEliminadoParameter = pa_EstaEliminado.HasValue ?
                new ObjectParameter("Pa_EstaEliminado", pa_EstaEliminado) :
                new ObjectParameter("Pa_EstaEliminado", typeof(bool));
    
            var zo_IDParameter = zo_ID.HasValue ?
                new ObjectParameter("Zo_ID", zo_ID) :
                new ObjectParameter("Zo_ID", typeof(int));
    
            var tP_IDParameter = tP_ID.HasValue ?
                new ObjectParameter("TP_ID", tP_ID) :
                new ObjectParameter("TP_ID", typeof(int));
    
            var est_IDParameter = est_ID.HasValue ?
                new ObjectParameter("Est_ID", est_ID) :
                new ObjectParameter("Est_ID", typeof(int));
    
            var gen_IDParameter = gen_ID.HasValue ?
                new ObjectParameter("Gen_ID", gen_ID) :
                new ObjectParameter("Gen_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_Paciente_Result>("SIUD_Paciente", controlParameter, sub_ControlParameter, pa_IDParameter, pa_NombreParameter, pa_ApellidoParameter, pa_CedulaParameter, pa_FechaNacParameter, pa_FechaAltaParameter, pa_TelefonoParameter, pa_CelularParameter, pa_EmailParameter, domi_IDParameter, pa_EstaActivoParameter, pa_EstaEliminadoParameter, zo_IDParameter, tP_IDParameter, est_IDParameter, gen_IDParameter);
        }
    
        public virtual ObjectResult<SIUD_Provincia_Result> SIUD_Provincia(string control, Nullable<int> sub_Control, Nullable<int> pro_ID, string pro_Nombre, Nullable<bool> pro_EstaActivo)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var pro_IDParameter = pro_ID.HasValue ?
                new ObjectParameter("Pro_ID", pro_ID) :
                new ObjectParameter("Pro_ID", typeof(int));
    
            var pro_NombreParameter = pro_Nombre != null ?
                new ObjectParameter("Pro_Nombre", pro_Nombre) :
                new ObjectParameter("Pro_Nombre", typeof(string));
    
            var pro_EstaActivoParameter = pro_EstaActivo.HasValue ?
                new ObjectParameter("Pro_EstaActivo", pro_EstaActivo) :
                new ObjectParameter("Pro_EstaActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_Provincia_Result>("SIUD_Provincia", controlParameter, sub_ControlParameter, pro_IDParameter, pro_NombreParameter, pro_EstaActivoParameter);
        }
    
        public virtual int SIUD_Sector(string control, Nullable<int> sub_Control, Nullable<int> sec_ID, string sec_Nombre, Nullable<bool> sec_EstaActivo, Nullable<int> mu_ID)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var sec_IDParameter = sec_ID.HasValue ?
                new ObjectParameter("Sec_ID", sec_ID) :
                new ObjectParameter("Sec_ID", typeof(int));
    
            var sec_NombreParameter = sec_Nombre != null ?
                new ObjectParameter("Sec_Nombre", sec_Nombre) :
                new ObjectParameter("Sec_Nombre", typeof(string));
    
            var sec_EstaActivoParameter = sec_EstaActivo.HasValue ?
                new ObjectParameter("Sec_EstaActivo", sec_EstaActivo) :
                new ObjectParameter("Sec_EstaActivo", typeof(bool));
    
            var mu_IDParameter = mu_ID.HasValue ?
                new ObjectParameter("Mu_ID", mu_ID) :
                new ObjectParameter("Mu_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SIUD_Sector", controlParameter, sub_ControlParameter, sec_IDParameter, sec_NombreParameter, sec_EstaActivoParameter, mu_IDParameter);
        }
    
        public virtual ObjectResult<SIUD_TipoPaciente_Result> SIUD_TipoPaciente(string control, Nullable<int> sub_Control, Nullable<int> gen_ID, string tP_Descripcion)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var gen_IDParameter = gen_ID.HasValue ?
                new ObjectParameter("Gen_ID", gen_ID) :
                new ObjectParameter("Gen_ID", typeof(int));
    
            var tP_DescripcionParameter = tP_Descripcion != null ?
                new ObjectParameter("TP_Descripcion", tP_Descripcion) :
                new ObjectParameter("TP_Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_TipoPaciente_Result>("SIUD_TipoPaciente", controlParameter, sub_ControlParameter, gen_IDParameter, tP_DescripcionParameter);
        }
    
        public virtual ObjectResult<SIUD_USUARIO_Result> SIUD_USUARIO(string control, Nullable<int> sub_Control, string busqueda, string us_Usuario, string us_Password, Nullable<int> doc_ID, byte[] us_Foto, string us_Email, string us_Estatus, Nullable<int> us_ID)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("Busqueda", busqueda) :
                new ObjectParameter("Busqueda", typeof(string));
    
            var us_UsuarioParameter = us_Usuario != null ?
                new ObjectParameter("Us_Usuario", us_Usuario) :
                new ObjectParameter("Us_Usuario", typeof(string));
    
            var us_PasswordParameter = us_Password != null ?
                new ObjectParameter("Us_Password", us_Password) :
                new ObjectParameter("Us_Password", typeof(string));
    
            var doc_IDParameter = doc_ID.HasValue ?
                new ObjectParameter("Doc_ID", doc_ID) :
                new ObjectParameter("Doc_ID", typeof(int));
    
            var us_FotoParameter = us_Foto != null ?
                new ObjectParameter("Us_Foto", us_Foto) :
                new ObjectParameter("Us_Foto", typeof(byte[]));
    
            var us_EmailParameter = us_Email != null ?
                new ObjectParameter("Us_Email", us_Email) :
                new ObjectParameter("Us_Email", typeof(string));
    
            var us_EstatusParameter = us_Estatus != null ?
                new ObjectParameter("Us_Estatus", us_Estatus) :
                new ObjectParameter("Us_Estatus", typeof(string));
    
            var us_IDParameter = us_ID.HasValue ?
                new ObjectParameter("Us_ID", us_ID) :
                new ObjectParameter("Us_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_USUARIO_Result>("SIUD_USUARIO", controlParameter, sub_ControlParameter, busquedaParameter, us_UsuarioParameter, us_PasswordParameter, doc_IDParameter, us_FotoParameter, us_EmailParameter, us_EstatusParameter, us_IDParameter);
        }
    
        public virtual ObjectResult<SIUD_Zona_Result> SIUD_Zona(string control, Nullable<int> sub_Control, Nullable<int> zo_ID, string zo_Nombre, Nullable<bool> zo_EstaActivo)
        {
            var controlParameter = control != null ?
                new ObjectParameter("Control", control) :
                new ObjectParameter("Control", typeof(string));
    
            var sub_ControlParameter = sub_Control.HasValue ?
                new ObjectParameter("Sub_Control", sub_Control) :
                new ObjectParameter("Sub_Control", typeof(int));
    
            var zo_IDParameter = zo_ID.HasValue ?
                new ObjectParameter("Zo_ID", zo_ID) :
                new ObjectParameter("Zo_ID", typeof(int));
    
            var zo_NombreParameter = zo_Nombre != null ?
                new ObjectParameter("Zo_Nombre", zo_Nombre) :
                new ObjectParameter("Zo_Nombre", typeof(string));
    
            var zo_EstaActivoParameter = zo_EstaActivo.HasValue ?
                new ObjectParameter("Zo_EstaActivo", zo_EstaActivo) :
                new ObjectParameter("Zo_EstaActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIUD_Zona_Result>("SIUD_Zona", controlParameter, sub_ControlParameter, zo_IDParameter, zo_NombreParameter, zo_EstaActivoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
